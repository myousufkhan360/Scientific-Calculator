
package calculator;

import java.awt.Color;
import java.math.*;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JWindow;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;


class spl  extends JWindow   {
  private int duration;
  public spl(int d) {
    duration = d;
  }

public void showSplash() {
    JPanel content = (JPanel)getContentPane();
    content.setBackground(Color.white);

    // Set the window's bounds, centering the window
    int width = 500;
    int height =650;
    Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (screen.width-width)/2;
    int y = (screen.height-height)/2;
    setBounds(x,y,width,height);

    // Build the splash screen
    JLabel label = new JLabel(new ImageIcon("C:/Users/One Click/Desktop/Scientific Calculator/Calculator/src/calculator/HandyCalculator.jpg"));
    JLabel copyrt = new JLabel
      ("Copyright @ Handy Calculator", JLabel.CENTER);
    copyrt.setFont(new Font("Sans-Serif", Font.BOLD, 12));
    content.add(label, BorderLayout.CENTER);
    content.add(copyrt, BorderLayout.SOUTH);
    Color oraRed = new Color(156, 20, 20,  255);
    content.setBorder(BorderFactory.createLineBorder(oraRed, 10));

    // Display it
    setVisible(true);

    // Wait a little while, maybe while loading resources
    try { Thread.sleep(duration); } catch (Exception e) {}

    setVisible(false);
  }

  public void showSplashAndExit() {
    showSplash();
    //System.exit(0);
  }
}

public class calculatorFrame extends javax.swing.JFrame {

    private boolean zerodisp;
    private boolean decdisp;
    private boolean dgrrad;
    private boolean sh;
    
    private byte op;  // this is for operators +,-,*,/,%
    
    private double ina;
    private double inb;
    private double out;
    
    
  
    public calculatorFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        display1 = new javax.swing.JTextField();
        display2 = new javax.swing.JTextField();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        memoryread = new javax.swing.JButton();
        memoryclear = new javax.swing.JButton();
        memorysave = new javax.swing.JButton();
        memorydisplay = new javax.swing.JTextField();
        degrees = new javax.swing.JRadioButton();
        radians = new javax.swing.JRadioButton();
        jButton7 = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        onedividedbyx = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        shift = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        three = new javax.swing.JButton();
        add = new javax.swing.JButton();
        squared = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        subtract = new javax.swing.JButton();
        squareroot = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        cubed = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        decpoint = new javax.swing.JButton();
        negate = new javax.swing.JButton();
        cuberoot = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        equals = new javax.swing.JButton();
        power = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Handy Calculator");
        setLocation(new java.awt.Point(450, 80));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Corbel", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MX-092101 PLUS");
        jLabel1.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Corbel", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Handy Calculator");
        jLabel2.setFocusable(false);

        display1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        display1.setText(" 0");
        display1.setBorder(null);
        display1.setFocusable(false);
        display1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display1ActionPerformed(evt);
            }
        });

        display2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        display2.setBorder(null);
        display2.setFocusable(false);
        display2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display2ActionPerformed(evt);
            }
        });

        one.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/button.jpg"))); // NOI18N
        one.setBorder(null);
        one.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        one.setFocusable(false);
        one.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/1a.png"))); // NOI18N
        one.setSelected(true);
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        two.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/2.gif"))); // NOI18N
        two.setBorder(null);
        two.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        two.setFocusable(false);
        two.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/2a.png"))); // NOI18N
        two.setSelected(true);
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/ce.gif"))); // NOI18N
        clear.setBorder(null);
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear.setFocusable(false);
        clear.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/6.gif"))); // NOI18N
        clear.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/ce a.png"))); // NOI18N
        clear.setSelected(true);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        memoryread.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/MR.png"))); // NOI18N
        memoryread.setBorder(null);
        memoryread.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        memoryread.setFocusable(false);
        memoryread.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/mr a.png"))); // NOI18N
        memoryread.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/mr a.png"))); // NOI18N
        memoryread.setSelected(true);
        memoryread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryreadActionPerformed(evt);
            }
        });

        memoryclear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/MC.png"))); // NOI18N
        memoryclear.setBorder(null);
        memoryclear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        memoryclear.setFocusable(false);
        memoryclear.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/mc a.png"))); // NOI18N
        memoryclear.setSelected(true);
        memoryclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryclearActionPerformed(evt);
            }
        });

        memorysave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/MS.png"))); // NOI18N
        memorysave.setBorder(null);
        memorysave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        memorysave.setFocusable(false);
        memorysave.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/ms a.png"))); // NOI18N
        memorysave.setSelected(true);
        memorysave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memorysaveActionPerformed(evt);
            }
        });

        memorydisplay.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        memorydisplay.setText(" 0");
        memorydisplay.setBorder(null);
        memorydisplay.setFocusable(false);

        degrees.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup1.add(degrees);
        degrees.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        degrees.setForeground(new java.awt.Color(255, 255, 255));
        degrees.setText("Degrees");
        degrees.setBorder(null);
        degrees.setFocusable(false);
        degrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degreesActionPerformed(evt);
            }
        });

        radians.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup1.add(radians);
        radians.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radians.setForeground(new java.awt.Color(255, 255, 255));
        radians.setText("Radian");
        radians.setBorder(null);
        radians.setFocusable(false);
        radians.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiansActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/log.png"))); // NOI18N
        jButton7.setBorder(null);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setFocusable(false);
        jButton7.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/log a.png"))); // NOI18N
        jButton7.setSelected(true);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        percent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/%.png"))); // NOI18N
        percent.setBorder(null);
        percent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        percent.setFocusable(false);
        percent.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/% a.png"))); // NOI18N
        percent.setSelected(true);
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });

        onedividedbyx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/1x.png"))); // NOI18N
        onedividedbyx.setBorder(null);
        onedividedbyx.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        onedividedbyx.setFocusable(false);
        onedividedbyx.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/upon a.png"))); // NOI18N
        onedividedbyx.setSelected(true);
        onedividedbyx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onedividedbyxActionPerformed(evt);
            }
        });

        sin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/sin.png"))); // NOI18N
        sin.setBorder(null);
        sin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sin.setFocusable(false);
        sin.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/sin a.png"))); // NOI18N
        sin.setSelected(true);
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        cos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/cos.png"))); // NOI18N
        cos.setBorder(null);
        cos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cos.setFocusable(false);
        cos.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/cos a.png"))); // NOI18N
        cos.setSelected(true);
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        tan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/tan.png"))); // NOI18N
        tan.setBorder(null);
        tan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tan.setFocusable(false);
        tan.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/tan a.png"))); // NOI18N
        tan.setSelected(true);
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        shift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/button_shift (2).png"))); // NOI18N
        shift.setBorder(null);
        shift.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shift.setFocusable(false);
        shift.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/shift a.png"))); // NOI18N
        shift.setSelected(true);
        shift.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shiftMouseClicked(evt);
            }
        });
        shift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftActionPerformed(evt);
            }
        });

        pi.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        pi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/pie.png"))); // NOI18N
        pi.setBorder(null);
        pi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pi.setFocusable(false);
        pi.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/pie a.png"))); // NOI18N
        pi.setSelected(true);
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        three.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 18)); // NOI18N
        three.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/3.gif"))); // NOI18N
        three.setBorder(null);
        three.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        three.setFocusable(false);
        three.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/3a.png"))); // NOI18N
        three.setSelected(true);
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/+.gif"))); // NOI18N
        add.setBorder(null);
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.setFocusable(false);
        add.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/+a.png"))); // NOI18N
        add.setSelected(true);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        squared.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/xsquare.png"))); // NOI18N
        squared.setBorder(null);
        squared.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        squared.setFocusable(false);
        squared.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/square a.png"))); // NOI18N
        squared.setSelected(true);
        squared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squaredActionPerformed(evt);
            }
        });

        four.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/4.gif"))); // NOI18N
        four.setBorder(null);
        four.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        four.setFocusable(false);
        four.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/4a.png"))); // NOI18N
        four.setSelected(true);
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        five.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/5.gif"))); // NOI18N
        five.setBorder(null);
        five.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        five.setFocusable(false);
        five.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/5a.png"))); // NOI18N
        five.setSelected(true);
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        six.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/6.gif"))); // NOI18N
        six.setBorder(null);
        six.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        six.setFocusable(false);
        six.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/6a.png"))); // NOI18N
        six.setSelected(true);
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        subtract.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/-.gif"))); // NOI18N
        subtract.setBorder(null);
        subtract.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        subtract.setFocusable(false);
        subtract.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/-a.png"))); // NOI18N
        subtract.setSelected(true);
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });

        squareroot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/root.png"))); // NOI18N
        squareroot.setBorder(null);
        squareroot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        squareroot.setFocusable(false);
        squareroot.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/root a.png"))); // NOI18N
        squareroot.setSelected(true);
        squareroot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squarerootActionPerformed(evt);
            }
        });

        seven.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/7.gif"))); // NOI18N
        seven.setBorder(null);
        seven.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        seven.setFocusable(false);
        seven.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/7a.png"))); // NOI18N
        seven.setSelected(true);
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/8.gif"))); // NOI18N
        eight.setBorder(null);
        eight.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eight.setFocusable(false);
        eight.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/8a.png"))); // NOI18N
        eight.setSelected(true);
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/9.gif"))); // NOI18N
        nine.setBorder(null);
        nine.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nine.setFocusable(false);
        nine.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/9a.png"))); // NOI18N
        nine.setSelected(true);
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        multiply.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/mul.gif"))); // NOI18N
        multiply.setBorder(null);
        multiply.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        multiply.setFocusable(false);
        multiply.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/mul a.png"))); // NOI18N
        multiply.setSelected(true);
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        cubed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/xcube.png"))); // NOI18N
        cubed.setBorder(null);
        cubed.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cubed.setFocusable(false);
        cubed.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/cube a.png"))); // NOI18N
        cubed.setSelected(true);
        cubed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cubedActionPerformed(evt);
            }
        });

        zero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/0.gif"))); // NOI18N
        zero.setBorder(null);
        zero.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        zero.setFocusable(false);
        zero.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/0a.png"))); // NOI18N
        zero.setSelected(true);
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        decpoint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/point.png"))); // NOI18N
        decpoint.setBorder(null);
        decpoint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        decpoint.setFocusable(false);
        decpoint.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/. a.png"))); // NOI18N
        decpoint.setSelected(true);
        decpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decpointActionPerformed(evt);
            }
        });

        negate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/plusminus.png"))); // NOI18N
        negate.setBorder(null);
        negate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        negate.setFocusable(false);
        negate.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/plus minus a.png"))); // NOI18N
        negate.setSelected(true);
        negate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negateActionPerformed(evt);
            }
        });

        cuberoot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/cuberoot.png"))); // NOI18N
        cuberoot.setBorder(null);
        cuberoot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cuberoot.setFocusable(false);
        cuberoot.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/cube roo a.png"))); // NOI18N
        cuberoot.setSelected(true);
        cuberoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuberootActionPerformed(evt);
            }
        });

        divide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/div.gif"))); // NOI18N
        divide.setBorder(null);
        divide.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        divide.setFocusable(false);
        divide.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/div a.png"))); // NOI18N
        divide.setSelected(true);
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/c.gif"))); // NOI18N
        reset.setBorder(null);
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.setFocusable(false);
        reset.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/c a.png"))); // NOI18N
        reset.setSelected(true);
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        equals.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/ans.png"))); // NOI18N
        equals.setBorder(null);
        equals.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        equals.setFocusable(false);
        equals.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/ans a.png"))); // NOI18N
        equals.setSelected(true);
        equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsActionPerformed(evt);
            }
        });

        power.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/xy (2).png"))); // NOI18N
        power.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        power.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/xy a.png"))); // NOI18N
        power.setSelected(true);
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(degrees, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(radians, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(onedividedbyx, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(114, 114, 114)
                        .addComponent(jLabel1))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(memoryread, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(memoryclear)
                        .addGap(6, 6, 6)
                        .addComponent(memorysave, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(memorydisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cubed, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(squareroot, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decpoint, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(negate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(divide)))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cuberoot, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(shift, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pi)
                            .addComponent(squared, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memoryread)
                    .addComponent(memoryclear)
                    .addComponent(memorysave)
                    .addComponent(memorydisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(degrees)
                    .addComponent(radians)
                    .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(onedividedbyx, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(shift, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(sin))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(squared, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(squareroot, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtract))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(cubed)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(negate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(decpoint, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(cuberoot)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(reset, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(clear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void display1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display1ActionPerformed

    private void display2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display2ActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "1");
         zerodisp = true;
        
        
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "2");
         zerodisp = true;
        
        
    }//GEN-LAST:event_twoActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        
           display1.setText("0");
           zerodisp = false;
           decdisp = false;
        
    }//GEN-LAST:event_clearActionPerformed

    private void memoryclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryclearActionPerformed
        // TODO add your handling code here:
        
        memorydisplay.setText(" 0");
        
    }//GEN-LAST:event_memoryclearActionPerformed

    private void memorysaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memorysaveActionPerformed
        // TODO add your handling code here:
        
         memorydisplay.setText(String.valueOf(display1.getText()));
        
    }//GEN-LAST:event_memorysaveActionPerformed

    private void degreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degreesActionPerformed
        // TODO add your handling code here:
           dgrrad = false;
    }//GEN-LAST:event_degreesActionPerformed

    private void radiansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiansActionPerformed
        // TODO add your handling code here:
           dgrrad = false;
    }//GEN-LAST:event_radiansActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        out = Math.log10(inb) ;  // to find log using sqrt of math class
     display1.setText(String.valueOf(out));
        display2.setText( "log" + String.valueOf(inb));
        out = 0;
        op = 0;
    }//GEN-LAST:event_jButton7ActionPerformed

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
         ina = Double.parseDouble(String.valueOf(display1.getText()));
        display1.setText("0");
        display2.setText(String.valueOf(ina) + "%(");
        
        decdisp = false;
        zerodisp = false;
        op = 5;
    }//GEN-LAST:event_percentActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        if(!sh){
        display2.setText("cos ( " +String.valueOf(inb) + " )" );
            if(!dgrrad){  //for degree conversion
            
            inb = inb * 0.0174532925 ;
                
            }
            
            out = Math.cos(inb);
        
        }
        
        else{
          display2.setText("cosh ( " +String.valueOf(inb) + " )" );
         out = Math.cosh(inb);
        
        }     
        
        display1.setText(String.valueOf(out));
        out = 0;
        op = 0;
    }//GEN-LAST:event_cosActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "3");
         zerodisp = true;
        
        
    }//GEN-LAST:event_threeActionPerformed

    private void cubedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cubedActionPerformed
        // TODO add your handling code here:
        
           inb = Double.parseDouble(String.valueOf(display1.getText()));
        out = inb * inb * inb ;  // to find square

        if(out > -100000000 && out < 100000000) //for setting boundaries of the answer
        {
            display1.setText(String.valueOf(out));   
        }
        else{
            display1.setText("Error can not be displayed"); //so the values would not be dispalyed if they are not in the range of -100000000 to 100000000
        }
      display2.setText( String.valueOf(inb) + "³");
        out = 0;
         op = 0;
        
        
        
    }//GEN-LAST:event_cubedActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
         if(op == 0){
            ina = Double.parseDouble(String.valueOf(display1.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op == 1){
            ina = ina + inb;
        }
        
        if(op == 2){
            ina = ina - inb;
        }
        
        if(op == 3){
            ina = ina * inb;
        }
        
        if(op == 4){
            ina = ina / inb;
        }
        
        if(op == 5){
            ina = ina * inb / 100;
        }
        
         if(op == 6){
        
            ina =  Math.pow(ina, inb);
        
        }
        
        display1.setText("0");
        display2.setText(String.valueOf(ina) + " / ");
        
        op = 4;
        
        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_divideActionPerformed

    private void equalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsActionPerformed
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        
        if(op == 0){
            out = inb;
            display2.setText(String.valueOf(inb));
        }
        
        if(op == 1){
            out = ina + inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        
        if(op == 2){
            out = ina - inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        
        if(op == 3){
            out = ina * inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        
        if(op == 4){
            out = ina / inb;
            display2.setText(display2.getText() + String.valueOf(inb));
        }
        
        if(op == 5){
            out = ina * inb / 100;
            display2.setText(display2.getText() + String.valueOf(inb) + ")");
        }
        
         if(op == 6){
        
           out = Math.pow(ina, inb);
        display2.setText(display2.getText() + String.valueOf(inb));
        }
        
        if(out > -100000000 && out < 100000000){
            display1.setText(String.valueOf(out));
        }
        else{
            display1.setText("Error can not be displayed");
        }
        
        ina = 0;
        inb = 0;
        out = 0;
        
        op = 0;
        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_equalsActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "0");
        
    }//GEN-LAST:event_zeroActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "4");
         zerodisp = true;
        
        
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "5");
         zerodisp = true;
        
        
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "6");
         zerodisp = true;
        
        
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        	InputStream music;
try{
music = new FileInputStream(new File("C:/Users/One Click/Desktop/Scientific Calculator/Calculator/src/calculator/button-16.wav"));
AudioStream audios=new AudioStream(music);
AudioPlayer.player.start(audios);
}
catch(IOException e){
JOptionPane.showMessageDialog(null,e.getLocalizedMessage());
}  
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "7");
         zerodisp = true;
        
        
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "8");
         zerodisp = true;
        
        
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        
         if(!zerodisp && !decdisp){
        display1.setText(null);
        
        }
        display1.setText(display1.getText() + "9");
         zerodisp = true;
        
        
    }//GEN-LAST:event_nineActionPerformed

    private void negateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negateActionPerformed
        // TODO add your handling code here:
        
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        out = inb * -1; //for adding negative sign 
        
        if(out > -100000000 && out < 100000000) //for setting boundaries of the answer
        {
            display1.setText(String.valueOf(out));   
        }
        else{
            display1.setText("Error can not be displayed"); //so the values would not be dispalyed if they are not in the range of -100000000 to 100000000
        }
        decdisp = true; //after negation decimal numbers would be dispalyed
        out = 0;
         op = 0;
        
    }//GEN-LAST:event_negateActionPerformed

    private void decpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decpointActionPerformed
        // TODO add your handling code here:
        
         if(!decdisp){
            display1.setText(display1.getText() + ".");
            decdisp = true;
         }
        
        
    }//GEN-LAST:event_decpointActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        
          display1.setText(" 0 ");
          display2.setText(null);
           zerodisp = false;
           decdisp = false;
           ina = 0;
           inb = 0;
           out = 0;
        
        
    }//GEN-LAST:event_resetActionPerformed

    private void memoryreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryreadActionPerformed
        // TODO add your handling code here:
        
        display1.setText(String.valueOf(memorydisplay.getText()));
        
    }//GEN-LAST:event_memoryreadActionPerformed

    private void onedividedbyxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onedividedbyxActionPerformed
        // TODO add your handling code here:
        
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        out = 1/inb; //dividing by 1
        
        if(out > -100000000 && out < 100000000) //for setting boundaries of the answer
        {
            display1.setText(String.valueOf(out));   
        }
        else{
            display1.setText("Error can not be displayed"); //so the values would not be dispalyed if they are not in the range of -100000000 to 100000000
        }
      display2.setText("1 / " + String.valueOf(inb));
        out = 0;
         op = 0;
        
        
    }//GEN-LAST:event_onedividedbyxActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
        // TODO add your handling code here:
        
        display1.setText(String.valueOf(Math.PI));
        
    }//GEN-LAST:event_piActionPerformed

    private void squaredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squaredActionPerformed
        // TODO add your handling code here:
        
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        out = inb * inb;  // to find square

        if(out > -100000000 && out < 100000000) //for setting boundaries of the answer
        {
            display1.setText(String.valueOf(out));   
        }
        else{
            display1.setText("Error can not be displayed"); //so the values would not be dispalyed if they are not in the range of -100000000 to 100000000
        }
      display2.setText( String.valueOf(inb) + "²");
        out = 0;
         op = 0;
    }//GEN-LAST:event_squaredActionPerformed

    private void squarerootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squarerootActionPerformed
        // TODO add your handling code here:
        
         inb = Double.parseDouble(String.valueOf(display1.getText()));
        out = Math.sqrt(inb) ;  // to find square root using sqrt of math class
     display1.setText(String.valueOf(out));
        display2.setText( "√" + String.valueOf(inb));
        out = 0;
        op = 0; 
    }//GEN-LAST:event_squarerootActionPerformed

    private void cuberootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuberootActionPerformed
        // TODO add your handling code here:
        
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        out = Math.cbrt(inb) ;  // to find cube root using cbrt of math class
     display1.setText(String.valueOf(out));
        display2.setText( "³√" + String.valueOf(inb));
        out = 0;
         op = 0;
        
    }//GEN-LAST:event_cuberootActionPerformed

    private void shiftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shiftMouseClicked
        // TODO add your handling code here:
        
        
        //this method would make a toggle button
     if(!sh){
            sh = true;
        }
        else{
            sh = false;
        }
        
        
    }//GEN-LAST:event_shiftMouseClicked

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
        // TODO add your handling code here:
        
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        if(!sh){
        display2.setText("sin ( " +String.valueOf(inb) + " )" );
            if(!dgrrad){  //for degree conversion
            
            inb = inb * 0.0174532925 ;
                
            }
            
            out = Math.sin(inb);
        
        }
        
        else{
          display2.setText("sinh ( " +String.valueOf(inb) + " )" );
         out = Math.sinh(inb);
        
        }     
        
        display1.setText(String.valueOf(out));
        out = 0;
         op = 0;
    }//GEN-LAST:event_sinActionPerformed

    private void shiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shiftActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
        inb = Double.parseDouble(String.valueOf(display1.getText()));
        if(!sh){
        display2.setText("tan ( " +String.valueOf(inb) + " )" );
            if(!dgrrad){  //for degree conversion
            
            inb = inb * 0.0174532925 ;
                
            }
            
            out = Math.tan(inb);
        
        }
        
        else{
          display2.setText("tanh ( " +String.valueOf(inb) + " )" );
         out = Math.tanh(inb);
        
        }     
        
        display1.setText(String.valueOf(out));
        out = 0;
         op = 0;
    }//GEN-LAST:event_tanActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
         if(op == 0){
            ina = Double.parseDouble(String.valueOf(display1.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op == 1){
            ina = ina + inb;
        }
        
        if(op == 2){
            ina = ina - inb;
        }
        
        if(op == 3){
            ina = ina * inb;
        }
        
        if(op == 4){
            ina = ina / inb;
        }
        
        if(op == 5){
            ina = ina * inb / 100;
        }
        
         if(op == 6){
        
            ina =  Math.pow(ina, inb);
        
        }
        
        display1.setText("0");
        display2.setText(String.valueOf(ina) + " + ");
        
        op = 1;
        
        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_addActionPerformed

    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed
        if(op == 0){
            ina = Double.parseDouble(String.valueOf(display1.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op == 1){
            ina = ina + inb;
        }
        
        if(op == 2){
            ina = ina - inb;
        }
        
        if(op == 3){
            ina = ina * inb;
        }
        
        if(op == 4){
            ina = ina / inb;
        }
        
        if(op == 5){
            ina = ina * inb / 100;
        }
        
         if(op == 6){
        
            ina =  Math.pow(ina, inb);
        
        }
        
        display1.setText("0");
        display2.setText(String.valueOf(ina) + " - ");
        
        op = 2;
        
        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_subtractActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
      if(op == 0){
            ina = Double.parseDouble(String.valueOf(display1.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op == 1){
            ina = ina + inb;
        }
        
        if(op == 2){
            ina = ina - inb;
        }
        
        if(op == 3){
            ina = ina * inb;
        }
        
        if(op == 4){
            ina = ina / inb;
        }
        
        if(op == 5){
            ina = ina * inb / 100;
        }
        
         if(op == 6){
        
            ina =  Math.pow(ina, inb);
        
        }
        
        display1.setText("0");
        display2.setText(String.valueOf(ina) + " * ");
        
        op = 3;
        
        decdisp = false;
        zerodisp = false;
    }//GEN-LAST:event_multiplyActionPerformed

    private void powerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerActionPerformed
        if(op == 0){
            ina = Double.parseDouble(String.valueOf(display1.getText()));
        }
        else{
            inb = Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op == 1){
            ina = ina + inb;
        }
        
        if(op == 2){
            ina = ina - inb;
        }
        
        if(op == 3){
            ina = ina * inb;
        }
        
        if(op == 4){
            ina = ina / inb;
        }
        
        if(op == 5){
            ina = ina * inb / 100;
        }
        
        if(op == 6){
        
            ina =  Math.pow(ina, inb);
        
        }
        
        display1.setText("0");
        display2.setText(String.valueOf(ina) + " ^ ");
        
        op = 6;
        
        decdisp = false;
        zerodisp = false;
        
    }//GEN-LAST:event_powerActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        InputStream music;
try{
music = new FileInputStream(new File("C:/Users/One Click/Desktop/Scientific Calculator/Calculator/src/calculator/voice.wav"));
AudioStream audios=new AudioStream(music);
AudioPlayer.player.start(audios);
}
catch(Exception e){
JOptionPane.showMessageDialog(null,e.getLocalizedMessage());
}       
    }//GEN-LAST:event_formWindowOpened
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        spl splash = new spl(5000);
    // Normally, we'd call splash.showSplash() and get on with the program.
    // But, since this is only a test...
    splash.showSplashAndExit(); 
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculatorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private javax.swing.JButton cos;
    private javax.swing.JButton cubed;
    private javax.swing.JButton cuberoot;
    private javax.swing.JButton decpoint;
    private javax.swing.JRadioButton degrees;
    private javax.swing.JTextField display1;
    private javax.swing.JTextField display2;
    private javax.swing.JButton divide;
    private javax.swing.JButton eight;
    private javax.swing.JButton equals;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton memoryclear;
    private javax.swing.JTextField memorydisplay;
    private javax.swing.JButton memoryread;
    private javax.swing.JButton memorysave;
    private javax.swing.JButton multiply;
    private javax.swing.JButton negate;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton onedividedbyx;
    private javax.swing.JButton percent;
    private javax.swing.JButton pi;
    private javax.swing.JButton power;
    private javax.swing.JRadioButton radians;
    private javax.swing.JButton reset;
    private javax.swing.JButton seven;
    private javax.swing.JButton shift;
    private javax.swing.JButton sin;
    private javax.swing.JButton six;
    private javax.swing.JButton squared;
    private javax.swing.JButton squareroot;
    private javax.swing.JButton subtract;
    private javax.swing.JButton tan;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
